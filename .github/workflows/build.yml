name: Binary Build
on:
  push:
    branches: '*'
  pull_request:
    branches: [master] # This allows us to test PRs without always needing to build locally. It's secure as all first time contributors first need to be approved for running GitHub actions
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, macos-11, ARM64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/a95ed9fe764c3ba2bf2d2fa223012c379cd6b32e.tar.gz
    - uses: cachix/cachix-action@v12
      with:
        name: digitallyinduced
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: git clone https://github.com/digitallyinduced/ihp-boilerplate.git
    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: |
          ihp-boilerplate/build
        key: ${{ runner.os }}-ghc
    - run: |
          cd ihp-boilerplate
          echo "<?php" >> replace.php
          echo "\$file_contents = file_get_contents('./default.nix');" >> replace.php
          echo '$new_content = preg_replace("/\".{40}\"/", "\"$argv[1]\"", $file_contents);' >> replace.php
          echo '$new_content_with_ref = preg_replace("/refs\/tags\/v\d+.\d+.\d+/", "${{ github.ref }}", $new_content);' >> replace.php
          echo '$new_content_with_ref = str_replace("p.ihp", "p.ihp wreq mmark mmark-ext strip-ansi-escape stripe-signature stripe-concepts http-conduit haskell-to-elm aeson-casing tz tagsoup ihp-zip minio-hs hs-brotli wai-middleware-brotli fakedata jwt ihp-openai ihp-graphql", $new_content_with_ref);' >> replace.php
          echo "file_put_contents('./default.nix', \$new_content_with_ref);" >> replace.php
          echo "?>" >> replace.php
          php replace.php $GITHUB_SHA
          cat default.nix
          mv Makefile Makefile.old
          echo 'GHC_OPTIONS+= -rtsopts=all\n.SHELLFLAGS := -eu -o pipefail -c\n\n'|cat - Makefile.old > Makefile
          nix-shell --run "new-application Web && make build/bin/RunUnoptimizedProdServer"
    - name: Install devenv.sh
      run: nix profile install --accept-flake-config github:cachix/devenv/latest

    # Build the app's dev env
    - run: |
        cd ihp-boilerplate
        rm devenv.yaml
        echo "inputs:" >> devenv.yaml
        echo "    nixpkgs:" >> devenv.yaml
        echo "        url: github:NixOS/nixpkgs?rev=a95ed9fe764c3ba2bf2d2fa223012c379cd6b32e" >> devenv.yaml
        echo "    ihp:" >> devenv.yaml
        echo "        url: github:digitallyinduced/ihp?ref=${{ github.sha }}" >> devenv.yaml
        echo "        flake: false" >> devenv.yaml
    - run: cd ihp-boilerplate && devenv ci
    - run: cd ihp-boilerplate && devenv shell echo ok

    # Also build the framework's dev env
    - run: devenv ci
    - run: devenv shell echo ok